# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.


clients = [1, "name", 2, "name_2", 3, "name_3"]

print(clients)

clients.append(4)

clients.extend("name_5")
print(clients)

for x in clients:
    print(f"{type(x)}, {x}") # вывел тип элемента и сам элемент
    
# Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

x_1 = int(input("Введите количество элементов в списке "))
list = []
i = 0
x = 0
while i < x_1:
    list.append(input("Введите следующее значение элемнта в списке "))
    i = i + 1

for el in range(int(len(list) / 2)):
    list[x], list[x + 1] = list[x + 1], list[x]
    el = el + 2
print(list)

#Пользователь вводит месяц в виде целого числа от 1 до 12.
#Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
#Напишите решения через list и через dict
#Решение через list
season_list = ['зима', 'весна', 'лето', 'осень']
month = int(input("Введите номер месяца в году "))
if month == 1 or month == 2 or month == 12:
        print(season_list[0])
elif month == 3 or month == 4 or month ==5:
    print(season_list[1])
elif month == 6 or month == 7 or month == 8:
    print(season_list[2])
elif month == 9 or month == 10 or month == 11:
    print(season_list[3])
else:
        print("В году всего 12 месяцев, введите число от 1 до 12))")
        
#Пользователь вводит месяц в виде целого числа от 1 до 12.
#Сообщить к какому времени года относится месяц (зима, весна, лето, осень).

#Решение через dict

season_dict = {1 : 'winter',2 : 'spring', 3 : 'summer', 4 : 'autumn'}
month = int(input("Введите номер месяца в году"))
if month == 1 or month == 2 or month == 12:
        print(season_dict.get(1))
elif month == 3 or month == 4 or month ==5:
        print(season_dict.get(2))
elif month == 6 or month == 7 or month == 8:
        print(season_dict.get(3))
elif month == 9 or month == 10 or month == 11:
        print(season_dict.get(4))
else:
        print("В году всего 12 месяцев, введите число от 1 до 12))")
        
#Пользователь вводит строку из нескольких слов, разделённых пробелами.
#Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
#Если в слово длинное, выводить только первые 10 букв в слове.

S = input("Введите строку из нескольких слов, разделенных пробелами")
word = []
x = 1
for y in range(S.count(' ') + 1):
    word = S.split()
    if len(str(word)) <= 10:
        print(f" {x} {word [y]}")
        x = x + 1
    else:
        print(f" {x} {word [y] [0:10]}")
        x = x + 1
        
#Реализовать структуру «Рейтинг», представляющую собой
#не возрастающий набор натуральных чисел.
#У пользователя необходимо запрашивать новый элемент рейтинга.
#Если в рейтинге существуют элементы с одинаковыми значениями,
#то новый элемент с тем же значением должен разместиться после них.
#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#Набор натуральных чисел можно задать непосредственно в коде,например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]
print(my_list)
i = int(input("Введите число"))
for x in range(len(my_list)):
    if my_list[x] == i:
        my_list.insert(x + 1, i)
        break
    elif my_list[0] < i:
        my_list.insert(0, i)
        break
    elif my_list[-1] > i:
        my_list.append(i)
        break
    elif my_list[x] > i and my_list[x + 1] < i:
        my_list.insert(x + 1, i)
        break

print(my_list) 

#Реализовать структуру данных «Товары».
#Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
#В кортеже должно быть два элемента — номер товара
#и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
#Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#Пример готовой структуры:

#[
    #(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
   # (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
    #(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#]
goods = int(input("Введите количество товара "))
n = 1
g_dict = []
g_list = []
g_analys = {}
while n <= goods:
    g_dict = dict({'название': input("введите название "), 'цена': input("Введите цену "),
                    'количество': input('Введите количество '), 'eд': input("Введите единицу измерения ")})
    g_list.append((n, g_dict))
    n = n + 1
    п_analys = dict(
        {'название': g_dict.get('название'), 'цена': g_dict.get('цена'), 'количество': g_dict.get('количество'),
         'ед': g_dict.get('ед')})
print(g_list)
print(g_analys)
